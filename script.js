// 1. –í—ã–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
const gameContainer = document.querySelector('.game-container');
// 2. –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Å —ç–º–æ–¥–∑–∏
const emojis = ['üçé', 'üçå', 'üçí', 'üçá', 'üçâ', 'üçç', 'ü•ù', 'ü•ë'];
// 3. –î—É–±–ª–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è –ø–∞—Ä
let cards = [...emojis, ...emojis];
// 4. –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —ç–º–æ–¥–∑–∏
cards.sort(() => Math.random() - 0.5);
// 5. –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–≤–æ–π –∏ –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç—ã
let firstCard = null;
let secondCard = null;
// 6. –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–æ—Å–∫–∏
let lockBoard = false;
// 1.1 –°–æ–∑–¥–∞—ë–º —Ç–∞–π–º–µ—Ä
// 1.1.0 –°–æ–∑–¥–∞—ë–º HTML —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
//  <p>‚è≥ –í—Ä–µ–º—è: <span id="timer">0</span> —Å–µ–∫ | üîÑ –•–æ–¥—ã: <span id="moves">0</span></p>
// 1.1.1 –í—ã–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ç–∞–π–º–µ—Ä–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ö–æ–¥–æ–≤
const timerElement = document.getElementById('timer');
const movesElement = document.getElementById('moves');
// 1.1.2 –°–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
let timer = 0;
// 1.1.3 –°–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é  –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ö–æ–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–æ–∫ –¥–µ–ª–∞–µ—Ç –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã
let moves = 0;
// 1.1.4 –°–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
let interval;
// 1.1.5 –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞
function startTimer() {
	interval = setInterval(() => {
		timer++;
		timerElement.textContent = timer;
	}, 1000);
}
// 7. –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
function createCard(emoji) {
	// 8. –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç div
	const card = document.createElement('div');
	// 9. –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å card
	card.classList.add('card');
	// 10. –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç data-emoji
	card.dataset.emoji = emoji;
	// 11. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç—ã
	card.innerHTML = '?';
	// 12. –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞
	card.addEventListener('click', () => {
		// 13. –ï—Å–ª–∏ –¥–æ—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –∏–ª–∏ –∫–∞—Ä—Ç–∞ —Ä–∞–≤–Ω–∞ –ø–µ—Ä–≤–æ–π –∫–∞—Ä—Ç–µ, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
		if (lockBoard || card === firstCard) return;
		// 14. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç—ã
		card.innerHTML = emoji;
		// 15. –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å flipped –∫ –∫–∞—Ä—Ç–µ
		card.classList.add('flipped');
		// 16. –ï—Å–ª–∏ firstCard —Ä–∞–≤–µ–Ω null, —Ç–æ firstCard —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç–æ–π
		if (!firstCard) {
			firstCard = card;
		} else {
			// 17. –ï—Å–ª–∏ secondCard —Ä–∞–≤–µ–Ω null, —Ç–æ secondCard —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç–æ–π
			secondCard = card;
			// 18. –ë–ª–æ–∫–∏—Ä—É–µ–º –¥–æ—Å–∫—É
			lockBoard = true;
			// 19. –ï—Å–ª–∏ –∫–∞—Ä—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç, —Ç–æ —É–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
			if (firstCard.dataset.emoji === secondCard.dataset.emoji) {
				firstCard = null;
				secondCard = null;
				lockBoard = false;
			} else {
				// 20. –ï—Å–ª–∏ –∫–∞—Ä—Ç—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, —Ç–æ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É —É–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞—Å—Å flipped —É –∫–∞—Ä—Ç
				setTimeout(() => {
					firstCard.innerHTML = '?';
					secondCard.innerHTML = '?';
					firstCard.classList.remove('flipped');
					secondCard.classList.remove('flipped');
					firstCard = null;
					secondCard = null;
					lockBoard = false;
				}, 1000);
			}
		}
	});
	return card;
}
// 21. –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ —Å –∫–∞—Ä—Ç–∞–º–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
cards.forEach((emoji) => {
	gameContainer.append(createCard(emoji));
});
